{"version":3,"sources":["app_components/weather.component.jsx","app_components/form.component.jsx","app_components/forecast.component.jsx","App.js","serviceWorker.js","index.js"],"names":["Weather","props","className","margin","font","date","city","weatherIcon","temp","description","max","min","minMaxTemp","temp_max","temp_min","error","role","Form","resStatus","undefined","onSubmit","loadweather","type","placeholder","name","autoComplete","Alert","bsStyle","Forecast","forecast","map","value","index","dt","iconUrl","weather","icon","Table","key","align","width","Date","getDay","hour","getHours","ampm","returnTime","src","alt","Math","round","require","config","process","REACT_APP_API_URL","apiKey","currentDate","d","day","getDate","month","getMonth","year","getFullYear","App","getPosition","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","getGeoWeather","latitude","longitude","a","fetch","forCall","json","data","setState","current","getWeatherIcon","hourly","id","getWeather","e","preventDefault","target","elements","api_call","forecast_call","res","for_res","status","days","list","forIcons","fIcon","length","push","main","fIcons","state","country","lat","long","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","this","then","position","coords","catch","err","code","PERMISSION_DENIED","console","log","message","icons","rangeId","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b08a304c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Weather = (props) => {\r\n    return(\r\n        <div className='container' margin=\"3rem\" font='white' className='p-4'>\r\n            <div className='cards pt-4'>\r\n                <h1 className='py-4'>{props.date}</h1>\r\n                <h1>{props.city}</h1>\r\n                <h5 className='py-4'>\r\n                    <i className={`wi ${props.weatherIcon} display-1`}></i>\r\n                </h5>\r\n                {props.temp ? <h1 className='py-2'>{props.temp}&deg;F</h1> : null}\r\n                <h4 className='py-3'>{props.description}</h4>\r\n                {/*shows the min and max temps*/}\r\n                {minMaxTemp(props.temp_max, props.temp_min)}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction minMaxTemp(max,min){\r\n    if(min && max){\r\n        return(\r\n            <h3>\r\n            <span className='px-4'>High: {max}&deg;F</span>\r\n            <span className='px-4'>Low: {min}&deg;F</span>\r\n            </h3>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Weather;","import React from 'react';\r\nimport './form.style.css';\r\nimport {Alert} from 'react-bootstrap';\r\n\r\nconst Form = (props) => {\r\n  // console.log(props.resStatus)\r\n  if(props.resStatus!==200 && props.resStatus!==undefined){\r\n    return (\r\n      <div className=\"container h-100\">\r\n        <form onSubmit={props.loadweather}>\r\n          <div>{props.error ? error() : \"\"}</div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-3 offset-md-3\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Enter City or Zip Code\"\r\n                name=\"city\"\r\n                autoComplete=\"off\"\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 mt-md-0 py-2 text-md-left \">\r\n              <button className=\"btn btn-warning\">Get Weather</button>\r\n            </div>\r\n          </div>\r\n          <div className='alert'>\r\n            <Alert bsStyle=\"warning\">\r\n              <strong> Invalid City </strong>\r\n            </Alert>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container h-100\">\r\n        <form onSubmit={props.loadweather}>\r\n          <div>{props.error ? error() : \"\"}</div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-3 offset-md-3\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"City\"\r\n                name=\"city\"\r\n                autoComplete=\"off\"\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 mt-md-0 py-2 text-md-left \">\r\n              <button className=\"btn btn-warning\">Get Weather</button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n  \r\n  const error = (props) => {\r\n    return (\r\n      <div className=\"alert alert-danger mx-5\" role=\"alert\">\r\n        Please Enter City and Country...!\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default Form;","import React from 'react';\r\nimport './forecast.style.css'\r\n\r\n/** Dependencies*/\r\nimport \"weather-icons/css/weather-icons.css\"; //git project from https://github.com/erikflowers/weather-icons\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Table } from 'react-bootstrap';\r\n\r\n\r\nconst Forecast = (props) =>{\r\n\tlet forecast=props.forecast;\r\n\r\n\treturn (\r\n\t\t(forecast ? \r\n\t\t\t<div className='container' margin='3rem'>\r\n\t\t\t{forecast.map((value, index) => {\r\n\t\t\t\tlet iconUrl = `http://openweathermap.org/img/wn/${value.weather[0].icon}.png`\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Table key={index}>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td align=\"center\" width=\"5%\">{dayOfWeek(value.dt)}</td>\r\n\t\t\t\t\t\t\t\t<td align=\"center\" width=\"5%\">{returnTime(value.dt)}</td>\r\n\t\t\t\t\t\t\t\t<td align='center' width=\"5%\">\r\n\t\t\t\t\t\t\t\t\t<img src={iconUrl} alt=\"hello\"></img>\r\n\t\t\t\t\t\t\t\t\t<p>{value.weather[0].description}</p>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td align=\"center\" width=\"10%\">{Math.round(value.temp)}&deg;F</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t)\r\n\t\t\t})} </div>\r\n\t\t:null)\r\n\t)\r\n}\r\n\r\n\r\nfunction dayOfWeek(dt){\r\n\tlet date = new Date(dt*1000);\r\n\tlet weekDay = date.getDay();\r\n\tlet day=weekDay%7;\r\n\tlet days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\n\treturn days[day];\r\n\r\n}\r\n\r\nfunction returnTime(dt){\r\n\tlet date = new Date(dt*1000);\r\n\tlet hour = date.getHours();\r\n\tlet ampm = \"am\";\r\n\r\n\tif(hour>12){\r\n\t\tampm=\"pm\";\r\n\t\thour= hour-12;\r\n\t} else if(hour===0){\r\n\t\thour=12\r\n\t}\r\n\r\n\tvar time = hour + ampm;\r\n\r\n\treturn time;\r\n}\r\n\r\nexport default Forecast;","/**\r\n * Followed this tutorial\r\n * https://www.youtube.com/watch?v=IxuqmfO6p28&t=2s \r\n * */\r\n\r\n\r\n//Components\r\nimport React from 'react';\r\nimport Weather from './app_components/weather.component';\r\nimport Form from './app_components/form.component';\r\nimport './App.css';\r\n\r\n/** Dependencies*/\r\nimport \"weather-icons/css/weather-icons.css\"; //git project from https://github.com/erikflowers/weather-icons\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Forecast from './app_components/forecast.component';\r\nrequire('dotenv').config();\r\n\r\nlet envKey = process.env.REACT_APP_API_URL;\r\n\r\n/**\r\n * Here is the api documentation for openweathermap\r\n * https://openweathermap.org/api\r\n */\r\nconst apiKey = {\r\n  key: \"7b7154eb47e573afde1536472685b7fb\",\r\n  base: 'https://api.openweathermap.org/data/2.5/'\r\n}\r\n\r\nconst currentDate=(d)=>{\r\n  let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n  let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\n  let day = days[d.getDay()];\r\n  let date = d.getDate();\r\n  let month = months[d.getMonth()];\r\n  let year = d.getFullYear();\r\n\r\n  return `${day} ${month} ${date}, ${year}`\r\n}\r\n\r\n\r\n\r\nclass App extends React.Component{\r\n constructor(){\r\n   super();\r\n   this.state={\r\n     date:undefined,\r\n     city:undefined,\r\n     country:undefined,\r\n     icon:undefined,\r\n     main:undefined,\r\n     temp:0,\r\n     temp_max:0,\r\n     temp_min:0,\r\n     description:\"\",\r\n     error:false,\r\n     forecast:undefined,\r\n     fIcons:undefined,\r\n     lat: 0,\r\n     long: 0,\r\n     resStatus:200\r\n   }\r\n   \r\n   this.weatherIcon={\r\n    Thunderstorm: \"wi-thunderstorm\",\r\n    Drizzle: \"wi-sleet\",\r\n    Rain: \"wi-storm-showers\",\r\n    Snow: \"wi-snow\",\r\n    Atmosphere: \"wi-fog\",\r\n    Clear: \"wi-day-sunny\",\r\n    Clouds: \"wi-day-fog\"\r\n   }\r\n }\r\n\r\n\r\n componentDidMount(){\r\n   this.getPosition()\r\n   .then((position) => {\r\n     this.getGeoWeather(position.coords.latitude, position.coords.longitude)\r\n  })\r\n  .catch((err) => {\r\n    if(err.code === err.PERMISSION_DENIED){\r\n      //TODO: need to figure out a way for the user to search if they deny geolocation permission\r\n    }\r\n    console.log(err.message);\r\n  })\r\n}\r\n\r\ngetPosition = () => {\r\n  return new Promise(function (resolve, reject){\r\n    navigator.geolocation.getCurrentPosition(resolve, reject);\r\n  });\r\n}\r\n\r\ngetGeoWeather = async (latitude,longitude) => {\r\n  const forCall = await fetch(`${apiKey.base}onecall?appid=${apiKey.key}&lat=${latitude}&lon=${longitude}&units=imperial&exclude=minutely`);\r\n  const data = await forCall.json();\r\n  this.setState({\r\n    date: currentDate(new Date()),\r\n    city: data.name,\r\n    temp: Math.round(data.current.temp),\r\n    icon: this.getWeatherIcon(data.current.weather[0].icon),\r\n    description: data.current.weather[0].description,\r\n    forecast: data.hourly\r\n  });\r\n\r\n  this.getWeatherIcon(this.weatherIcon, data.current.weather[0].id);\r\n}\r\n\r\n getWeatherIcon(icons, rangeId){\r\n  switch(true){\r\n    case rangeId >= 200 && rangeId < 232:\r\n        this.setState({ icon: icons.Thunderstorm });\r\n        break;\r\n      case rangeId >= 300 && rangeId <= 321:\r\n        this.setState({ icon: icons.Drizzle });\r\n        break;\r\n      case rangeId >= 500 && rangeId <= 521:\r\n        this.setState({ icon: icons.Rain });\r\n        break;\r\n      case rangeId >= 600 && rangeId <= 622:\r\n        this.setState({ icon: icons.Snow });\r\n        break;\r\n      case rangeId >= 701 && rangeId <= 781:\r\n        this.setState({ icon: icons.Atmosphere });\r\n        break;\r\n      case rangeId === 800:\r\n        this.setState({ icon: icons.Clear });\r\n        break;\r\n      case rangeId >= 801 && rangeId <= 804:\r\n        this.setState({ icon: icons.Clouds });\r\n        break;\r\n      default:\r\n        this.setState({ icon: icons.Clouds });\r\n  }\r\n }\r\n\r\n getWeather = async(e) => {\r\n\r\n  e.preventDefault();\r\n\r\n  const city = e.target.elements.city.value;\r\n  //const country = e.target.elements.country.value;\r\n\r\n  if(city){\r\n    const api_call = await fetch(`${apiKey.base}weather?APPID=${apiKey.key}&q=${city},us&units=imperial`);\r\n    const forecast_call = await fetch(`${apiKey.base}forecast?APPID=${apiKey.key}&q=${city},us&units=imperial&cnt=360`);\r\n    const res = await api_call.json();\r\n    const for_res = await forecast_call.json();\r\n\r\n    if(api_call.status===200){\r\n\r\n      let days=for_res.list;\r\n\r\n      let forIcons=[];\r\n\r\n      for (var fIcon = 0; fIcon < days.length; fIcon++) {\r\n        forIcons.push(days[fIcon].weather[0].icon);\r\n      }\r\n\r\n      this.setState({\r\n        date:currentDate(new Date()),\r\n        city:`${res.name}`,\r\n        temp:Math.round(res.main.temp),\r\n        temp_max:Math.round(res.main.temp_max),\r\n        temp_min:Math.round(res.main.temp_min),\r\n        description:res.weather[0].description,\r\n        icon: this.getWeatherIcon(res.weather[0].icon),\r\n        forecast: null,\r\n        fIcons: null,\r\n        error:false,\r\n        resStatus:api_call.status\r\n      });\r\n\r\n      this.getWeatherIcon(this.weatherIcon, res.weather[0].id);\r\n\r\n      }else{ \r\n\r\n        this.setState({resStatus: api_call.status})\r\n\r\n      }\r\n\r\n    } else {\r\n      this.setState({error:true})\r\n    }\r\n}\r\n  render(){\r\n    return(\r\n      <div className='App'>\r\n        <Form loadweather={this.getWeather} resStatus={this.state.resStatus}/>\r\n        <Weather \r\n        date={this.state.date}\r\n        city={this.state.city}\r\n        temp={this.state.temp}\r\n        temp_max={this.state.temp_max}\r\n        temp_min={this.state.temp_min}\r\n        description={this.state.description}\r\n        weatherIcon={this.state.icon}/>\r\n        <Forecast forecast={this.state.forecast} icon={this.weatherIcon}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}